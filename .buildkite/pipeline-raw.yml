# SPDX-FileCopyrightText: 2021 Oxhead Alpha
# SPDX-License-Identifier: LicenseRef-MIT-OA

env:
  SET_VERSION: "export TEZOS_VERSION=\"$(cat meta.json | jq -r '.tezos_ref' | cut -d'/' -f3)\""
  USE_NEWER_NIX: 1

steps:
 # We need to sign commits that update brew formulae separately
 - label: Sign formulae update commits
   if: build.branch =~ /^auto\/update-brew-formulae-.*/
   commands:
   - nix develop .#buildkite
       --command './scripts/sign-commits.sh'
 # To avoid race-conditions for the gpg key between jobs which sometimes leads to weird errors
 - wait

 - label: reuse lint
   command: nix shell .#reuse -c reuse lint
 - label: check trailing whitespace
   command: .buildkite/check-trailing-whitespace.sh
 - label: crossref-verify
   command: nix shell -f https://github.com/serokell/crossref-verifier/archive/68a1f9d25b6e7835fea8299b18a3e6c61dbb2a5c.tar.gz -c crossref-verify
   soft_fail: true
 - label: lint python code
   command: nix shell .#python39Packages.black -c black --check --diff --color .
 - label: lint bash scripts
   command: nix shell .#shellcheck -c shellcheck --shell=bash --exclude=SC1091 -x $(find . -name '*.sh')
 - label: pipeline-filtering
   command: nix develop .#buildkite --command 'nix shell .#bats -c ./tests/buildkite/filter-pipeline.bats'
   only_changes:
   - .buildkite/filter-pipeline.py
   - tests/buildkite/.*
 - label: check auto-inserting bottle hashes
   commands:
   - cd tests/bottle-hashes/
   - ./test-hash-insert.sh

 - label: build via nix
   commands:
   # NOTE: if this changes, remember to update the instructions in the nix/README.md too
   - nix build . -o binaries
   branches: "!master"
 - label: check flake
   commands:
   - nix flake check
   branches: "!master"
   # nix builds are usually cached, so we don't care about only_changes setting for it

 - label: trials
   key: trials
   branches: "pasqu4le/tmp"
   commands:
   - nix develop .#buildkite -c ./scripts/build-all-bottles.sh "big_sur"
   artifact_paths:
     - '*.bottle.*'
