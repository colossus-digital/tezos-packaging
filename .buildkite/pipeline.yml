# SPDX-FileCopyrightText: 2019-2020 TQ Tezos <https://tqtezos.com/>
#
# SPDX-License-Identifier: MPL-2.0

env:
  SET_VERSION: "export TEZOS_VERSION=\"$(cat nix/nix/sources.json | jq -r '.tezos.ref' | cut -d'/' -f3)\""
  USE_PODMAN: "True"

steps:
 - label: reuse lint
   command: nix run -f . pkgs.reuse -c reuse lint
 - label: check trailing whitespace
   command: .buildkite/check-trailing-whitespace.sh
 - label: crossref-verify
   command: "nix run -f https://github.com/serokell/crossref-verifier/archive/68a1f9d25b6e7835fea8299b18a3e6c61dbb2a5c.tar.gz -c crossref-verify"
   soft_fail: true

 - label: build via nix
   commands:
   - nix-build ./nix -A binaries -o binaries
   artifact_paths:
     - ./binaries/bin/*
   branches: "!master"
 - label: test nix-built binaries
   commands:
   - buildkite-agent artifact download "binaries/bin/*" . --step "build via nix"
   - chmod +x ./binaries/bin/*
   - nix-build tests/tezos-binaries.nix --no-out-link --arg path-to-binaries ./binaries/bin
   branches: "!master"

 - label: build via podman
   commands:
   - eval "$SET_VERSION"
   - cd docker
   - ./docker-static-build.sh
   - nix run -f.. pkgs.upx -c upx tezos-*
   artifact_paths:
     - ./docker/tezos-*
 # arm builer is an ubuntu machine without nix
 - label: build arm via docker
   commands:
   - eval "$SET_VERSION"
   - cd docker
   # arm builder doesn't have podman installed
   - USE_PODMAN="False" ./docker-static-build.sh
   - upx tezos-*
   - >
     for f in ./tezos-*; do
       mv "\$f" "\$f-arm64"
     done
   artifact_paths:
     - ./docker/tezos-*
   agents:
     queue: "arm64-build"
 - label: test docker-built binaries
   commands:
   - buildkite-agent artifact download "docker/*" . --step "build via podman"
   - chmod +x ./docker/*
   - nix-build tests/tezos-binaries.nix --no-out-link --arg path-to-binaries ./docker
   branches: "!master"

 - label: test deb source packages via podman
   commands:
   - eval "$SET_VERSION"
   - ./docker/docker-tezos-packages.sh ubuntu source
   artifact_paths:
     - ./out/*
   branches: "!master"
 - label: test deb binary packages via podman
   commands:
   - eval "$SET_VERSION"
   # Building all binary packages will take significant amount of time, so we build only one
   # in order to ensure package generation sanity
   - ./docker/docker-tezos-packages.sh ubuntu binary tezos-baker-006-PsCARTHA
   - rm -rf out
   branches: "!master"
 - label: test rpm source packages via podman
   commands:
   - eval "$SET_VERSION"
   - ./docker/docker-tezos-packages.sh fedora source
   artifact_paths:
     - ./out/*
   branches: "!master"
 - label: test rpm binary packages via podman
   commands:
   - eval "$SET_VERSION"
   # Building all binary packages will take significant amount of time, so we build only one
   # in order to ensure package generation sanity
   - ./docker/docker-tezos-packages.sh fedora binary tezos-baker-007-PsDELPH1
   - rm -rf out
   branches: "!master"

 - wait
 - label: create auto pre-release
   commands:
   - mkdir binaries
   - mkdir arm-binaries
   - buildkite-agent artifact download "docker/*" binaries --step "build via podman"
   - buildkite-agent artifact download "docker/*" arm-binaries --step "build arm via docker"
   - ls binaries
   - GITHUB_TOKEN=$(cat ~/niv-bot-token) ./scripts/autorelease.sh
   branches: master
