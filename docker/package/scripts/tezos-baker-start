#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2020 TQ Tezos <https://tqtezos.com/>
#
# SPDX-License-Identifier: LicenseRef-MIT-TQ

set -euo pipefail

# $PROTOCOL should be defined in the system unit environment
baker="/usr/bin/tezos-baker-$PROTOCOL"
tezos_client="/usr/bin/tezos-client"

baker_dir="$DATA_DIR"

baker_config="$baker_dir/config"
mkdir -p "$baker_dir"

if [ ! -f "$baker_config" ]; then
    "$baker" --base-dir "$baker_dir" \
             --endpoint "$NODE_RPC_ENDPOINT" \
             config init --output "$baker_config" >/dev/null 2>&1
else
    "$baker" --base-dir "$baker_dir" \
             --endpoint "$NODE_RPC_ENDPOINT" \
             config update >/dev/null 2>&1
fi

# Ithaca and Jakarta baker daemons have different liquidity baking escape voting format.
# Our baker services use format introduced in Jakarta and transform it to the format expected
# by Ithaca.
if [[ $PROTOCOL == "012-Psithaca" ]]; then
    case $LIQUIDITY_BAKING_TOGGLE_VOTE in
        off)
            vote_args=(--liquidity-baking-escape-vote)
        ;;
        *)
            vote_args=()
        ;;
    esac
else
    vote_args=(--liquidity-baking-toggle-vote "$LIQUIDITY_BAKING_TOGGLE_VOTE")
fi

launch_baker() {
    if [[ -n ${1-} ]]; then
        key_type="$("$tezos_client" show address "$BAKER_ADDRESS_ALIAS" -S | grep "Secret Key:" | cut -d':' -f2-2 | xargs)"
    fi
    if [[ ${key_type:-} == "encrypted" ]]; then
        password="$(systemd-ask-password --keyname="tezos-$BAKER_ADDRESS_ALIAS" --accept-cached \
            "Enter password for $BAKER_ADDRESS_ALIAS key:")"
        "$baker" --base-dir "$baker_dir" --endpoint "$NODE_RPC_ENDPOINT" \
            run with local node "$NODE_DATA_DIR" "${vote_args[@]}" "$@" <<< "$password" &
    else
        "$baker" --base-dir "$baker_dir" --endpoint "$NODE_RPC_ENDPOINT" \
            run with local node "$NODE_DATA_DIR" "${vote_args[@]}" "$@" &
    fi
}

if [[ -z "$BAKER_ADDRESS_ALIAS" ]]; then
    launch_baker "$@"
else
    launch_baker "$BAKER_ADDRESS_ALIAS" "$@"
fi
